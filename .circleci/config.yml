version: 2.1

orbs:
  discord: antonioned/discord@0.1.0

jobs:
  build-application:
    docker: 
      - image: mcr.microsoft.com/dotnet/sdk:3.1-buster

    steps:
      - checkout
      - run: 
          name: Install Build/System Dependencies
          command:
            |
            apt-get update -yq \
              && apt-get install curl gnupg -yq \
              && curl -sL https://deb.nodesource.com/setup_10.x | bash \
              && apt-get install nodejs -yq
            curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
            echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
            apt update && apt install yarn -yq
            apt install zip -yq

      - run: 
          name: Front-end Dependencies
          command:
            |
            cd frontend
            yarn install

      - run: 
          name: Front-end Test
          command: 
            |
            cd frontend
            yarn run validate
            yarn run lint

      - run:
          name: Front-end Build
          command: 
            |
            cd frontend
            yarn run build
         
      - run:
          name: Back-end Build
          command: 
            |
            cd backend
            dotnet publish ./GDB.App/GDB.App.csproj -c Release /property:Version=0.0.0.$CIRCLE_BUILD_NUM -o ../app-publish --runtime win-x64
            dotnet publish ./GDB.Tools.DatabaseMigration/GDB.Tools.DatabaseMigration.csproj -c Release /property:Version=0.0.0.$CIRCLE_BUILD_NUM -o ../app-migrate --self-contained -r linux-x64
            cd ../app-publish
            zip -r ../app-publish.zip *

      - persist_to_workspace: # store the built files into the workspace for other jobs.
          root: ./
          paths:
            - app-publish.zip
            - app-migrate

      - discord/status:
          fail_only: true
          failure_message: "Application: **$CIRCLE_JOB** job has failed!"
          webhook: "${DISCORD_STATUS_WEBHOOK}"
          mentions: "@employees"

  deploy-application:
    docker:
      - image: microsoft/azure-cli:latest
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run: 
          name: azure-cli
          command:
            |
            cd /tmp/workspace
            ls -l
            az login --service-principal -u http://${AzureServicePrincipal} -p ${AzurePassword} --tenant ${AzureTenant}
            az webapp deployment source config-zip -g ${AzureResourceGroup} -n ${AzureWebApp} -s staging --src app-publish.zip
            az webapp start -g ${AzureResourceGroup} -n ${AzureWebApp} -s staging
            az webapp deployment slot swap -g ${AzureResourceGroup} -n  ${AzureWebApp} -s staging --target-slot production
            az webapp stop -g ${AzureResourceGroup} -n ${AzureWebApp} -s staging

      - discord/status:
          fail_only: true
          failure_message: "Application: **$CIRCLE_JOB** deploy has failed!"
          webhook: "${DISCORD_STATUS_WEBHOOK}"
          mentions: "@employees"

      - discord/status:
          success_only: true
          success_message: "Application: **$CIRCLE_JOB** deployed successfully"
          webhook: "${DISCORD_STATUS_WEBHOOK}"

workflows:
  build_and_deploy:
    jobs:
      - build-application
      - deploy-application:
          requires:
            - build-application

          # filters: 
          #   branches:
          #     only: main
